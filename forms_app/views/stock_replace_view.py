# stock_replace_view.py

import os
import pandas as pd
from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from forms_app.models import StockRecord
from django.core.exceptions import PermissionDenied
from django.conf import settings
from django.contrib import messages
from forms_app.models import UserReport
from io import BytesIO


@login_required
def replace_stock(request):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–º–µ–Ω—ã output_stock.xlsx –Ω–æ–≤—ã–º —Ñ–∞–π–ª–æ–º.
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É —Å –∫–Ω–æ–ø–∫–æ–π "replace_stock"
    """

    user_id = request.user.id
    base_dir = os.path.join("user_stock", str(user_id))
    output_path = os.path.join(base_dir, "output_stock.xlsx")
    full_output_path = os.path.join(settings.MEDIA_ROOT, output_path)

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(os.path.dirname(full_output_path), exist_ok=True)

    if request.method == "POST":
        replace_file = request.FILES.get("replace_stock")

        if not replace_file:
            messages.error(request, "‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω –¥–ª—è –∑–∞–º–µ–Ω—ã.")
            return redirect("forms_app:form5")

        try:
            print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–Ω—É —Ñ–∞–π–ª–∞: {full_output_path}")

            # –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            temp_path = full_output_path + ".tmp"

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å
            with open(temp_path, "wb+") as destination:
                for chunk in BytesIO(replace_file.read()):
                    destination.write(chunk)

            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if os.path.exists(full_output_path):
                os.remove(full_output_path)
                print("üóëÔ∏è –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")

            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –æ—Å–Ω–æ–≤–Ω–æ–π
            os.rename(temp_path, full_output_path)
            print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω—ë–Ω")

            # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –ë–î (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            UserReport.objects.update_or_create(
                user=request.user,
                file_name="output_stock.xlsx",
                defaults={
                    "file_path": output_path,
                    "report_type": "form5",
                },
            )

            # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ —Ñ–æ—Ä–º—É 5 —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± —É—Å–ø–µ—Ö–µ
            messages.success(request, "‚úÖ –§–∞–π–ª –æ—Å—Ç–∞—Ç–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω—ë–Ω")
            return redirect("forms_app:form5")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —Ñ–∞–π–ª–∞: {e}")
            messages.error(request, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —Ñ–∞–π–ª–∞: {e}")
            return redirect("forms_app:form5")

    # GET-–∑–∞–ø—Ä–æ—Å (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ—à–∏–±–æ–∫)
    messages.warning(request, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞")
    return redirect("forms_app:form5")


@login_required
def preview_output_stock(request):
    """
    –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ output_stock.xlsx —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–∏—Å–∫–∞
    """

    user_id = request.user.id
    base_dir = os.path.join("user_stock", str(user_id))
    full_output_path = os.path.join(settings.MEDIA_ROOT, base_dir, "output_stock.xlsx")

    if not os.path.exists(full_output_path):
        return render(
            request,
            "forms_app/preview.html",
            {"error": "‚ùå –§–∞–π–ª output_stock.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"},
        )

    try:
        # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        df = pd.read_excel(full_output_path)

        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        if "–ü–æ–ª–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª" in df.columns:
            df = df.drop(columns=["–ü–æ–ª–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª"])

        # –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É
        query = request.GET.get("q")
        if query:
            # –ò—â–µ–º –ø–æ –≤—Å–µ–º —Å—Ç—Ä–æ–∫–∞–º –∏ —Å—Ç–æ–ª–±—Ü–∞–º
            df = df[
                df.astype(str)
                .apply(lambda row: row.str.contains(query, case=False, na=False))
                .any(axis=1)
            ]

        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ HTML
        table_html = df.to_html(
            classes="table table-bordered table-striped", index=False
        )

        return render(
            request,
            "forms_app/preview.html",
            {"table": table_html, "query": query or ""},
        )

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return render(
            request,
            "forms_app/preview.html",
            {"error": f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}"},
        )


@login_required
def replace_sql_stock(request):
    """
    –ü–æ–ª–Ω–∞—è –∑–∞–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∑–∞–≥—Ä—É–∑–∫—É Excel-—Ñ–∞–π–ª–∞ –≤ SQL
    """
    user = request.user

    if request.method == "POST":
        uploaded_file = request.FILES.get("replace_sql_stock")
        if not uploaded_file:
            messages.error(request, "‚ùå –§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω")
            return redirect("forms_app:editable_preview_sql")

        try:
            df = pd.read_excel(BytesIO(uploaded_file.read()))

            required_columns = [
                "–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞",
                "–†–∞–∑–º–µ—Ä",
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
                "–ú–µ—Å—Ç–æ",
                "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ",
            ]
            for col in required_columns:
                if col not in df.columns:
                    raise ValueError(f"‚ùå –í —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–æ–Ω–∫–∞ '{col}'")

            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            StockRecord.objects.filter(user=user).delete()

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
            records = []
            for _, row in df.iterrows():
                records.append(
                    StockRecord(
                        user=user,
                        article_full_name=row["–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"],
                        size=row["–†–∞–∑–º–µ—Ä"],
                        quantity=row["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"],
                        location=row.get("–ú–µ—Å—Ç–æ", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
                        note=row.get("–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ", ""),
                    )
                )

            StockRecord.objects.bulk_create(records)
            messages.success(request, "‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–º–µ–Ω–µ–Ω—ã")
            return redirect("forms_app:editable_preview_sql")

        except Exception as e:
            messages.error(request, f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return redirect("forms_app:editable_preview_sql")

    return render(request, "forms_app/replace_sql.html")
